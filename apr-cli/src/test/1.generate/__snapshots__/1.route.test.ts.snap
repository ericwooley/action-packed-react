// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generating route should generate a new route based on testRoutes: <project-root>playground/src/routes/readme.md 1`] = `
"
# Routes
\`routes\` is a folder for holding other routes, which follows the
[fractal pattern](https://hackernoon.com/fractal-a-react-app-structure-for-infinite-scale-4dab943092af).

Each route contains:
  * a \`routes\` folder for sub routes.
  * a \`components\` folder for react components for this route.
  * a \`redux\` folder, for
    [ducks](https://github.com/erikras/ducks-modular-redux),
    [sagas](https://redux-saga.js.org/), and anything else related to redux.
"
`;

exports[`generating route should generate a new route based on testRoutes: <project-root>playground/src/ui/readme.md 1`] = `
"# UI
\`ui\` is for reusable components, which should have 0 concept of anything else
 that is in your app.

## Examples
### Components that belong in ui.
UI components should be simple, pure, and require no context of the application.
Try to imagine that one day, you want to publish an npm package, based on your
ui elements. It should be as easy as copying this folder, and putting a
package.json file in it (and maybe a build system). Think of this as your own
personal bootstrap.
  * Button - simple ui component. It requires no context, or anything to
    be loaded in your app.
  * Grid - Meta component for arranging other components or children
  * Form inputs - keep your UI consistent by defining form inputs here.
  * Avatar - Takes an image, and creates a specific size.
  * Loader - Spinner or progress bar to show throughout the application.

### Components that do not belong in ui.
UI components that are specific to something in your application belong in
components.
  * UserAvatar - maybe it contains a link to user profiles, has knowledge of the
    user model, etc...
"
`;

exports[`generating route should generate a new route based on testRoutes: apr g route --name testRoute2 --route src/routes/testRoute --autoLink 1`] = `
",
Loaded templates: <project-root>apr-cli/_templates/
       added: src/routes/testRoute/routes/testRoute2/components/.gitkeep
       added: src/routes/testRoute/routes/testRoute2/index.ts
       added: src/routes/testRoute/routes/testRoute2/layout.tsx
       added: src/routes/testRoute/routes/testRoute2/redux/ducks/index.ts
       added: src/routes/testRoute/routes/testRoute2/redux/sagas/index.ts
       added: src/routes/testRoute/routes/testRoute2/redux/selectors/index.ts
       added: src/routes/testRoute/routes/testRoute2/redux/selectors/testRoute2.ts
       added: src/routes/testRoute/routes/testRoute2/route.ts
       added: src/routes/testRoute/routes/testRoute2/route.story.tsx
       added: src/routes/testRoute/routes/testRoute2/routes/.gitkeep
,"
`;

exports[`generating route should generate a new route based on testRoutes: file-list 1`] = `
Array [
  "<project-root>playground/src/components/RootLayout/index.tsx",
  "<project-root>playground/src/index.tsx",
  "<project-root>playground/src/redux/ducks/index.ts",
  "<project-root>playground/src/redux/sagas/index.ts",
  "<project-root>playground/src/redux/selectors/index.ts",
  "<project-root>playground/src/route.story.tsx",
  "<project-root>playground/src/route.tsx",
  "<project-root>playground/src/routes/readme.md",
  "<project-root>playground/src/routes/testRoute/index.ts",
  "<project-root>playground/src/routes/testRoute/layout.tsx",
  "<project-root>playground/src/routes/testRoute/redux/ducks/index.ts",
  "<project-root>playground/src/routes/testRoute/redux/sagas/index.ts",
  "<project-root>playground/src/routes/testRoute/redux/selectors/index.ts",
  "<project-root>playground/src/routes/testRoute/redux/selectors/testRoute.ts",
  "<project-root>playground/src/routes/testRoute/route.story.tsx",
  "<project-root>playground/src/routes/testRoute/route.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/layout.tsx",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/redux/ducks/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/redux/sagas/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/redux/selectors/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/redux/selectors/testRoute2.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/route.story.tsx",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/route.ts",
  "<project-root>playground/src/ui/readme.md",
  "<project-root>playground/src/ui/testUi/index.ts",
  "<project-root>playground/src/ui/testUi/testUi.story.tsx",
  "<project-root>playground/src/ui/testUi/testUi.tsx",
]
`;

exports[`generating route should generate a new route based on testRoutes2: apr g route --name testRoute3 --route src/routes/testRoute/routes/testRoute2 --autoLink 1`] = `
",
Loaded templates: <project-root>apr-cli/_templates/
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/components/.gitkeep
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/index.ts
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/layout.tsx
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/redux/ducks/index.ts
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/redux/sagas/index.ts
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/redux/selectors/index.ts
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/redux/selectors/testRoute3.ts
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/route.ts
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/route.story.tsx
       added: src/routes/testRoute/routes/testRoute2/routes/testRoute3/routes/.gitkeep
,"
`;

exports[`generating route should generate a new route based on testRoutes2: file-list 1`] = `
Array [
  "<project-root>playground/src/components/RootLayout/index.tsx",
  "<project-root>playground/src/index.tsx",
  "<project-root>playground/src/redux/ducks/index.ts",
  "<project-root>playground/src/redux/sagas/index.ts",
  "<project-root>playground/src/redux/selectors/index.ts",
  "<project-root>playground/src/route.story.tsx",
  "<project-root>playground/src/route.tsx",
  "<project-root>playground/src/routes/readme.md",
  "<project-root>playground/src/routes/testRoute/index.ts",
  "<project-root>playground/src/routes/testRoute/layout.tsx",
  "<project-root>playground/src/routes/testRoute/redux/ducks/index.ts",
  "<project-root>playground/src/routes/testRoute/redux/sagas/index.ts",
  "<project-root>playground/src/routes/testRoute/redux/selectors/index.ts",
  "<project-root>playground/src/routes/testRoute/redux/selectors/testRoute.ts",
  "<project-root>playground/src/routes/testRoute/route.story.tsx",
  "<project-root>playground/src/routes/testRoute/route.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/layout.tsx",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/redux/ducks/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/redux/sagas/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/redux/selectors/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/redux/selectors/testRoute2.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/route.story.tsx",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/route.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/routes/testRoute3/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/routes/testRoute3/layout.tsx",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/routes/testRoute3/redux/ducks/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/routes/testRoute3/redux/sagas/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/routes/testRoute3/redux/selectors/index.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/routes/testRoute3/redux/selectors/testRoute3.ts",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/routes/testRoute3/route.story.tsx",
  "<project-root>playground/src/routes/testRoute/routes/testRoute2/routes/testRoute3/route.ts",
  "<project-root>playground/src/ui/readme.md",
  "<project-root>playground/src/ui/testUi/index.ts",
  "<project-root>playground/src/ui/testUi/testUi.story.tsx",
  "<project-root>playground/src/ui/testUi/testUi.tsx",
]
`;

exports[`generating route should generate a new route: <project-root>playground/apr.config.js 1`] = `
"module.exports = {
  /* Webpack dev server options */
  // port: 8080,                         // Webpack dev server port
  // host: \\"localhost\\",                  // Webpack dev server host
}
"
`;

exports[`generating route should generate a new route: <project-root>playground/package.json 1`] = `
"{
  \\"name\\": \\"playground\\",
  \\"version\\": \\"1.0.0\\",
  \\"description\\": \\"My action-packed-react app\\",
  \\"main\\": \\"webpack.config.js\\",
  \\"scripts\\": {
    \\"prebuild\\": \\"rm -rf dist\\",
    \\"build\\": \\"apr build\\",
    \\"start\\": \\"apr dev\\",
    \\"lint\\": \\"tslint --project tsconfig.json\\",
    \\"test\\": \\"jest --passWithNoTests\\"
  },
  \\"author\\": \\"\\",
  \\"license\\": \\"MIT\\",
  \\"dependencies\\": {
    \\"action-packed-react\\": \\"<project-root>action-packed-react\\",
    \\"apr-cli\\": \\"<project-root>apr-cli\\",
    \\"history\\": \\"^4.10.1\\",
    \\"react\\": \\"^16.12.0\\",
    \\"react-dom\\": \\"^16.12.0\\",
    \\"styled-components\\": \\"^4.4.1\\"
  },
  \\"devDependencies\\": {
    \\"@storybook/addon-info\\": \\"^5.2.8\\",
    \\"@storybook/addon-storyshots\\": \\"^5.2.8\\",
    \\"@storybook/react\\": \\"^5.2.8\\",
    \\"@types/history\\": \\"^4.7.3\\",
    \\"@types/react\\": \\"^16.9.15\\",
    \\"@types/react-dom\\": \\"^16.9.4\\",
    \\"@types/styled-components\\": \\"^4.4.0\\",
    \\"babel-jest\\": \\"^24.9.0\\",
    \\"jest\\": \\"^24.9.0\\"
  }
}
"
`;

exports[`generating route should generate a new route: <project-root>playground/tsconfig.json 1`] = `
"{
  \\"compilerOptions\\": {
    \\"target\\": \\"es5\\",
    \\"lib\\": [\\"es2015\\", \\"es2016\\", \\"es2017\\", \\"dom\\"],
    \\"strict\\": true,
    \\"allowSyntheticDefaultImports\\": true,
    \\"experimentalDecorators\\": true,
    \\"emitDecoratorMetadata\\": true,
    \\"jsx\\": \\"react\\",
    \\"typeRoots\\": [\\"node_modules/@types\\", \\"src/types\\"],
    \\"rootDirs\\": [\\"src\\"],
    \\"baseUrl\\": \\"src\\",
    \\"paths\\": {
      \\"app\\": [\\"index\\"],
      \\"app/*\\": [\\"*\\"]
    }
  },
  \\"exclude\\": [\\"**/*.test.ts*\\", \\"\\"]
}
"
`;

exports[`generating route should generate a new route: apr g route --name testRoute --route src --autoLink 1`] = `
",
Loaded templates: <project-root>apr-cli/_templates/
       added: src/routes/testRoute/components/.gitkeep
       added: src/routes/testRoute/index.ts
       added: src/routes/testRoute/layout.tsx
       added: src/routes/testRoute/redux/ducks/index.ts
       added: src/routes/testRoute/redux/sagas/index.ts
       added: src/routes/testRoute/redux/selectors/index.ts
       added: src/routes/testRoute/redux/selectors/testRoute.ts
       added: src/routes/testRoute/route.ts
       added: src/routes/testRoute/route.story.tsx
       added: src/routes/testRoute/routes/.gitkeep
,"
`;

exports[`generating route should generate a new route: file-list 1`] = `
Array [
  "<project-root>playground/src/components/RootLayout/index.tsx",
  "<project-root>playground/src/index.tsx",
  "<project-root>playground/src/redux/ducks/index.ts",
  "<project-root>playground/src/redux/sagas/index.ts",
  "<project-root>playground/src/redux/selectors/index.ts",
  "<project-root>playground/src/route.story.tsx",
  "<project-root>playground/src/route.tsx",
  "<project-root>playground/src/routes/readme.md",
  "<project-root>playground/src/routes/testRoute/index.ts",
  "<project-root>playground/src/routes/testRoute/layout.tsx",
  "<project-root>playground/src/routes/testRoute/redux/ducks/index.ts",
  "<project-root>playground/src/routes/testRoute/redux/sagas/index.ts",
  "<project-root>playground/src/routes/testRoute/redux/selectors/index.ts",
  "<project-root>playground/src/routes/testRoute/redux/selectors/testRoute.ts",
  "<project-root>playground/src/routes/testRoute/route.story.tsx",
  "<project-root>playground/src/routes/testRoute/route.ts",
  "<project-root>playground/src/ui/readme.md",
  "<project-root>playground/src/ui/testUi/index.ts",
  "<project-root>playground/src/ui/testUi/testUi.story.tsx",
  "<project-root>playground/src/ui/testUi/testUi.tsx",
]
`;
